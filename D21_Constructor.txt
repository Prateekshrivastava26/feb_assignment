1.What is constructor?
Ans.A constructor is a special function in object-oriented programming that creates an object and prepares it for use.


2.What is constructor chaining?
Ans.Constructor chaining is a technique in object-oriented programming that allows one constructor to call another constructor of the same class. This can be useful for initializing objects in a specific order, or for providing different ways to initialize an object.

3.Can we call a subclass constructor from a superclass constructor
Ans.No, you cannot call a subclass constructor from a superclass constructor in Java. 

4.what happen if you keep a return type for a constructor?
Ans.In Java, adding a return type to a constructor causes a compilation error and turns the constructor into a class method.


5.What is no-arg constructor?
Ans.A no-argument constructor, also known as a nullary constructor, parameterless constructor, or default constructor, is a constructor that doesn't take any arguments or parameters. 


6.How is no-argument constructor different from the default constructor?
Ans.In Java, a default constructor initializes fields to their default values, while a no-argument constructor does not initialize any fields.


7.When do we need constructor overloading?
Ans.The purpose of constructor overloading is to provide different ways to initialize an object of a class. 


8.What is default constructor explain with an example? 
Ans.A default constructor is a constructor that takes no arguments, or all the parameters have default values. It is automatically generated by the compiler if no constructors are explicitly defined in the class.

ex-public class MyClass {
    public MyClass() { // Default constructor
    }
}